{"info":{"_postman_id":"a2f2e8e4-6d1c-4f1f-9f73-f0b01d4d7c4a","name":"Support Assignment System (Symfony 7)","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json","description":"Colección Postman documentada para la API del sistema de asignación de soportes. Arquitectura: Hexagonal (Ports & Adapters). Base URL por defecto: {{baseUrl}} (http://127.0.0.1:8000). Zona horaria de negocio: America/Bogota. Trabajadores fijos (fixtures): Camila, Carolina, Felipe. Asignación automática: menor carga diaria (suma de complejidades), desempate alfabético. Endpoints expuestos por adaptadores de entrada (controladores HTTP) que orquestan casos de uso en la capa de Aplicación y dependen de Puertos del Dominio (reloj y repositorios)."},"variable":[{"key":"baseUrl","value":"http://127.0.0.1:8000","type":"string","description":"URL base del servidor local Symfony"},{"key":"date","value":"2025-10-27","type":"string","description":"Fecha YYYY-MM-DD (America/Bogota) para el reporte diario. Cambiar según necesidad."}],"item":[{"name":"Supports","description":"Operaciones sobre Soportes. Complejidad válida: 10, 20 o 30. La asignación se hace automáticamente al trabajador con menor carga del día (America/Bogota).","item":[{"name":"Create Support","request":{"method":"POST","header":[{"key":"Content-Type","value":"application/json"}],"body":{"mode":"raw","raw":"{\n  \"description\": \"Problema con red\",\n  \"complexity\": 20\n}"},"url":{"raw":"{{baseUrl}}/api/supports","host":["{{baseUrl}}"],"path":["api","supports"]}},"event":[{"listen":"test","script":{"type":"text/javascript","exec":["pm.test('status 201', function () { pm.response.to.have.status(201); });","const body = pm.response.json();","pm.test('tiene id', function () { pm.expect(body).to.have.property('id'); });","pm.test('tiene worker', function () { pm.expect(body).to.have.property('worker'); });","pm.test('complexity válida', function () { pm.expect([10,20,30]).to.include(body.complexity); });"]}}],"description":"Crea un soporte y lo asigna automáticamente.\n\nRequest Body:\n{\n  \"description\": \"Texto descriptivo del problema\",\n  \"complexity\": 10 | 20 | 30\n}\n\nResponse 201 (ejemplo):\n{\n  \"id\": 1,\n  \"description\": \"Problema con red\",\n  \"complexity\": 20,\n  \"assignedAt\": \"2025-10-27T09:30:00\",\n  \"worker\": \"Carolina\"\n}"} ,{"name":"List Supports","request":{"method":"GET","header":[],"url":{"raw":"{{baseUrl}}/api/supports","host":["{{baseUrl}}"],"path":["api","supports"]}},"event":[{"listen":"test","script":{"type":"text/javascript","exec":["pm.test('status 200', function () { pm.response.to.have.status(200); });","const arr = pm.response.json();","pm.test('respuesta es arreglo', function () { pm.expect(Array.isArray(arr)).to.be.true; });"]}}],"description":"Lista todos los soportes registrados con su worker asignado.\n\nResponse 200 (ejemplo):\n[\n  {\n    \"id\": 1,\n    \"description\": \"Problema con red\",\n    \"complexity\": 20,\n    \"assignedAt\": \"2025-10-27T09:30:00\",\n    \"worker\": \"Felipe\"\n  }\n]"}]},{"name":"Reports","description":"Reportes operativos. El endpoint /api/report/daily-load acepta un parámetro opcional 'date' (YYYY-MM-DD). Si no se envía, se usa la fecha actual en la zona America/Bogota. Si el formato es inválido, responde 400 con un JSON de error.","item":[{"name":"Daily Load (by date)","request":{"method":"GET","header":[],"url":{"raw":"{{baseUrl}}/api/report/daily-load?date={{date}}","host":["{{baseUrl}}"],"path":["api","report","daily-load"],"query":[{"key":"date","value":"{{date}}","description":"Fecha YYYY-MM-DD en America/Bogota"}]}},"event":[{"listen":"test","script":{"type":"text/javascript","exec":["pm.test('status 200', function () { pm.response.to.have.status(200); });","const arr = pm.response.json();","pm.test('es arreglo', function () { pm.expect(Array.isArray(arr)).to.be.true; });","pm.test('estructura válida (worker,total)', function () { if (arr.length) { pm.expect(arr[0]).to.have.property('worker'); pm.expect(arr[0]).to.have.property('total'); } });"]}}],"description":"Reporte de carga diaria por trabajador para la fecha indicada (YYYY-MM-DD) en la zona horaria America/Bogota.\n\nResponse 200 (ejemplo):\n[\n  {\"worker\": \"Carolina\", \"total\": 30},\n  {\"worker\": \"Felipe\", \"total\": 20},\n  {\"worker\": \"Camila\", \"total\": 10}\n]"},{"name":"Daily Load (today)","request":{"method":"GET","header":[],"url":{"raw":"{{baseUrl}}/api/report/daily-load","host":["{{baseUrl}}"],"path":["api","report","daily-load"]}},"event":[{"listen":"test","script":{"type":"text/javascript","exec":["pm.test('status 200', function () { pm.response.to.have.status(200); });","const arr = pm.response.json();","pm.test('es arreglo', function () { pm.expect(Array.isArray(arr)).to.be.true; });","pm.test('estructura válida (worker,total)', function () { if (arr.length) { pm.expect(arr[0]).to.have.property('worker'); pm.expect(arr[0]).to.have.property('total'); } });"]}}],"description":"Reporte de carga diaria usando la fecha actual en America/Bogota (sin enviar parámetro 'date')."},{"name":"Daily Load (invalid date)","request":{"method":"GET","header":[],"url":{"raw":"{{baseUrl}}/api/report/daily-load?date=invalid","host":["{{baseUrl}}"],"path":["api","report","daily-load"],"query":[{"key":"date","value":"invalid","description":"Valor inválido para forzar 400"}]}},"event":[{"listen":"test","script":{"type":"text/javascript","exec":["pm.test('status 400', function () { pm.response.to.have.status(400); });","const body = pm.response.json();","pm.test('tiene mensaje de error', function () { pm.expect(body).to.have.property('error'); });"]}}],"description":"Ejemplo de validación fallida: formato de fecha inválido. Debe ser YYYY-MM-DD."}]}]}